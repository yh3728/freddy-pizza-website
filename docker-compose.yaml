services:
  backend:
    image: backend
    build:
      context: ./backend
    container_name: backend
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    ports:
      - 8082:8080
    environment:
      DB_URL: jdbc:postgresql://db:5432/${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      JWT_KEY: ${JWT_KEY}
      JWT_ACCESS_TOKEN: ${JWT_ACCESS_TOKEN}
      JWT_REFRESH_TOKEN: ${JWT_REFRESH_TOKEN}
      FRONTEND_URL: http://localhost:${FRONTEND_PORT}
  frontend:
    image: frontend
    env_file:
      - .env
    build:
      context: ./frontend
    container_name: frontend
    ports:
      - 8081:80
    environment:
      REACT_APP_API_BASE_URL: http://localhost:${FRONTEND_PORT}
    depends_on:
        - backend
        - db
  db:
    image: postgres
    env_file:
      - .env
    restart: always
    shm_size: 128mb
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    restart: always
    ports:
      - 5002:8080

volumes:
  db-data:
